package ch.aarboard.vamm.views.domainmanagement;

import ch.aarboard.vamm.data.SamplePerson;
import ch.aarboard.vamm.services.SamplePersonService;
import com.vaadin.flow.component.Composite;
import com.vaadin.flow.component.button.Button;
import com.vaadin.flow.component.button.ButtonVariant;
import com.vaadin.flow.component.dependency.Uses;
import com.vaadin.flow.component.grid.Grid;
import com.vaadin.flow.component.html.H1;
import com.vaadin.flow.component.html.H2;
import com.vaadin.flow.component.html.Paragraph;
import com.vaadin.flow.component.html.Span;
import com.vaadin.flow.component.icon.Icon;
import com.vaadin.flow.component.orderedlayout.FlexComponent;
import com.vaadin.flow.component.orderedlayout.FlexComponent.Alignment;
import com.vaadin.flow.component.orderedlayout.FlexComponent.JustifyContentMode;
import com.vaadin.flow.component.orderedlayout.HorizontalLayout;
import com.vaadin.flow.component.orderedlayout.VerticalLayout;
import com.vaadin.flow.router.Menu;
import com.vaadin.flow.router.PageTitle;
import com.vaadin.flow.router.Route;
import com.vaadin.flow.spring.data.VaadinSpringDataHelpers;
import com.vaadin.flow.theme.lumo.LumoUtility.Gap;
import org.springframework.beans.factory.annotation.Autowired;
import org.vaadin.lineawesome.LineAwesomeIconUrl;

@PageTitle("Domain Management")
@Route("domain")
@Menu(order = 0, icon = LineAwesomeIconUrl.PENCIL_RULER_SOLID)
@Uses(Icon.class)
public class DomainManagementView extends Composite<VerticalLayout> {

    public DomainManagementView() {
        VerticalLayout layoutColumn2 = new VerticalLayout();
        VerticalLayout layoutColumn3 = new VerticalLayout();
        H1 h1 = new H1();
        HorizontalLayout layoutRow = new HorizontalLayout();
        Paragraph textMedium = new Paragraph();
        Paragraph textLarge = new Paragraph();
        Paragraph textMedium2 = new Paragraph();
        Paragraph textLarge2 = new Paragraph();
        Span badge = new Span();
        HorizontalLayout layoutRow2 = new HorizontalLayout();
        HorizontalLayout layoutRow3 = new HorizontalLayout();
        H2 h2 = new H2();
        Button buttonPrimary = new Button();
        VerticalLayout layoutColumn4 = new VerticalLayout();
        Grid basicGrid = new Grid(SamplePerson.class);
        VerticalLayout layoutColumn5 = new VerticalLayout();
        HorizontalLayout layoutRow4 = new HorizontalLayout();
        H2 h22 = new H2();
        Button buttonPrimary2 = new Button();
        HorizontalLayout layoutRow5 = new HorizontalLayout();
        Grid basicGrid2 = new Grid(SamplePerson.class);
        getContent().setWidth("100%");
        getContent().getStyle().set("flex-grow", "1");
        layoutColumn2.setWidthFull();
        getContent().setFlexGrow(1.0, layoutColumn2);
        layoutColumn2.setWidth("100%");
        layoutColumn2.getStyle().set("flex-grow", "1");
        layoutColumn3.setWidthFull();
        layoutColumn2.setFlexGrow(1.0, layoutColumn3);
        layoutColumn3.setPadding(false);
        layoutColumn3.setWidth("100%");
        layoutColumn3.getStyle().set("flex-grow", "1");
        h1.setText("Manage ???.com");
        h1.setWidth("max-content");
        layoutRow.setWidthFull();
        layoutColumn3.setFlexGrow(1.0, layoutRow);
        layoutRow.addClassName(Gap.MEDIUM);
        layoutRow.setWidth("100%");
        layoutRow.getStyle().set("flex-grow", "1");
        textMedium.setText("2 Accounts");
        layoutRow.setAlignSelf(FlexComponent.Alignment.CENTER, textMedium);
        textMedium.setWidth("max-content");
        textMedium.getStyle().set("font-size", "var(--lumo-font-size-m)");
        textLarge.setText("|");
        layoutRow.setAlignSelf(FlexComponent.Alignment.CENTER, textLarge);
        textLarge.setWidth("max-content");
        textLarge.getStyle().set("font-size", "var(--lumo-font-size-xl)");
        textMedium2.setText("2 Aliases");
        layoutRow.setAlignSelf(FlexComponent.Alignment.CENTER, textMedium2);
        textMedium2.setWidth("max-content");
        textMedium2.getStyle().set("font-size", "var(--lumo-font-size-m)");
        textLarge2.setText("|");
        textLarge2.setWidth("max-content");
        textLarge2.getStyle().set("font-size", "var(--lumo-font-size-xl)");
        badge.setText("Active");
        layoutRow.setAlignSelf(FlexComponent.Alignment.CENTER, badge);
        badge.setWidth("min-content");
        badge.getElement().getThemeList().add("badge");
        layoutRow2.setWidthFull();
        layoutColumn2.setFlexGrow(1.0, layoutRow2);
        layoutRow2.addClassName(Gap.MEDIUM);
        layoutRow2.setWidth("100%");
        layoutRow2.setHeight("min-content");
        layoutRow3.setHeightFull();
        layoutRow2.setFlexGrow(1.0, layoutRow3);
        layoutRow3.addClassName(Gap.MEDIUM);
        layoutRow3.setWidth("100%");
        layoutRow3.setHeight("min-content");
        layoutRow3.setAlignItems(Alignment.CENTER);
        layoutRow3.setJustifyContentMode(JustifyContentMode.START);
        h2.setText("Accounts");
        h2.setWidth("max-content");
        h2.setHeight("100%");
        buttonPrimary.setText("Create Account");
        buttonPrimary.setWidth("min-content");
        buttonPrimary.addThemeVariants(ButtonVariant.LUMO_PRIMARY);
        layoutColumn4.setWidthFull();
        layoutColumn2.setFlexGrow(1.0, layoutColumn4);
        layoutColumn4.setPadding(false);
        layoutColumn4.setWidth("100%");
        layoutColumn4.getStyle().set("flex-grow", "1");
        basicGrid.setWidth("100%");
        basicGrid.getStyle().set("flex-grow", "0");
        setGridSampleData(basicGrid);
        layoutColumn5.setWidthFull();
        getContent().setFlexGrow(1.0, layoutColumn5);
        layoutColumn5.setWidth("100%");
        layoutColumn5.getStyle().set("flex-grow", "1");
        layoutRow4.setWidthFull();
        layoutColumn5.setFlexGrow(1.0, layoutRow4);
        layoutRow4.addClassName(Gap.MEDIUM);
        layoutRow4.setWidth("100%");
        layoutRow4.setHeight("min-content");
        layoutRow4.setAlignItems(Alignment.CENTER);
        layoutRow4.setJustifyContentMode(JustifyContentMode.START);
        h22.setText("Aliases");
        h22.setWidth("max-content");
        buttonPrimary2.setText("Create Alias");
        buttonPrimary2.setWidth("min-content");
        buttonPrimary2.addThemeVariants(ButtonVariant.LUMO_PRIMARY);
        layoutRow5.setWidthFull();
        layoutColumn5.setFlexGrow(1.0, layoutRow5);
        layoutRow5.addClassName(Gap.MEDIUM);
        layoutRow5.setWidth("100%");
        layoutRow5.getStyle().set("flex-grow", "1");
        basicGrid2.setWidth("100%");
        basicGrid2.getStyle().set("flex-grow", "0");
        setGridSampleData(basicGrid2);
        getContent().add(layoutColumn2);
        layoutColumn2.add(layoutColumn3);
        layoutColumn3.add(h1);
        layoutColumn3.add(layoutRow);
        layoutRow.add(textMedium);
        layoutRow.add(textLarge);
        layoutRow.add(textMedium2);
        layoutRow.add(textLarge2);
        layoutRow.add(badge);
        layoutColumn2.add(layoutRow2);
        layoutRow2.add(layoutRow3);
        layoutRow3.add(h2);
        layoutRow3.add(buttonPrimary);
        layoutColumn2.add(layoutColumn4);
        layoutColumn4.add(basicGrid);
        getContent().add(layoutColumn5);
        layoutColumn5.add(layoutRow4);
        layoutRow4.add(h22);
        layoutRow4.add(buttonPrimary2);
        layoutColumn5.add(layoutRow5);
        layoutRow5.add(basicGrid2);
    }

    private void setGridSampleData(Grid grid) {
        grid.setItems(query -> samplePersonService.list(VaadinSpringDataHelpers.toSpringPageRequest(query)).stream());
    }

    @Autowired()
    private SamplePersonService samplePersonService;
}
